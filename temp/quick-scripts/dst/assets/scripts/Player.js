
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Player.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6c688v72QdOKamCGCT+xaAd', 'Player');
// scripts/Player.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    jumpHeight: 0,
    jumpDuration: 0,
    maxMoveSpeed: 0,
    accel: 0,
    jumpAudio: {
      "default": null,
      type: cc.AudioClip
    }
  },
  setJumpAction: function setJumpAction() {
    var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());
    var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());
    var callback = cc.callFunc(this.playJumpSound, this);
    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));
  },
  playJumpSound: function playJumpSound() {
    cc.audioEngine.playEffect(this.jumpAudio, false);
  },
  onKeyDown: function onKeyDown(event) {
    switch (event.keyCode) {
      case cc.macro.KEY.a:
        this.accLeft = true;
        break;
      case cc.macro.KEY.s:
        this.accRight = true;
        break;
    }
  },
  onKeyUp: function onKeyUp(event) {
    switch (event.keyCode) {
      case cc.macro.KEY.a:
        this.accLeft = false;
        break;
      case cc.macro.KEY.s:
        this.accRight = false;
        break;
    }
  },
  onLoad: function onLoad() {
    this.jumpAction = this.setJumpAction();
    this.node.runAction(this.jumpAction);
    this.accLeft = false;
    this.accRight = false;
    this.xSpeed = 0;
    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
  },
  onDestroy: function onDestroy() {
    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
  },
  update: function update(dt) {
    if (this.accLeft) {
      this.xSpeed -= this.accel * dt;
    } else if (this.accRight) {
      this.xSpeed += this.accel * dt;
    }
    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {
      this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);
    }
    this.node.x += this.xSpeed * dt;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcUGxheWVyLmpzIl0sIm5hbWVzIjpbImNjIiwiQ2xhc3MiLCJDb21wb25lbnQiLCJwcm9wZXJ0aWVzIiwianVtcEhlaWdodCIsImp1bXBEdXJhdGlvbiIsIm1heE1vdmVTcGVlZCIsImFjY2VsIiwianVtcEF1ZGlvIiwidHlwZSIsIkF1ZGlvQ2xpcCIsInNldEp1bXBBY3Rpb24iLCJqdW1wVXAiLCJtb3ZlQnkiLCJ2MiIsImVhc2luZyIsImVhc2VDdWJpY0FjdGlvbk91dCIsImp1bXBEb3duIiwiZWFzZUN1YmljQWN0aW9uSW4iLCJjYWxsYmFjayIsImNhbGxGdW5jIiwicGxheUp1bXBTb3VuZCIsInJlcGVhdEZvcmV2ZXIiLCJzZXF1ZW5jZSIsImF1ZGlvRW5naW5lIiwicGxheUVmZmVjdCIsIm9uS2V5RG93biIsImV2ZW50Iiwia2V5Q29kZSIsIm1hY3JvIiwiS0VZIiwiYSIsImFjY0xlZnQiLCJzIiwiYWNjUmlnaHQiLCJvbktleVVwIiwib25Mb2FkIiwianVtcEFjdGlvbiIsIm5vZGUiLCJydW5BY3Rpb24iLCJ4U3BlZWQiLCJzeXN0ZW1FdmVudCIsIm9uIiwiU3lzdGVtRXZlbnQiLCJFdmVudFR5cGUiLCJLRVlfRE9XTiIsIktFWV9VUCIsIm9uRGVzdHJveSIsIm9mZiIsInVwZGF0ZSIsImR0IiwiTWF0aCIsImFicyIsIngiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUFBLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDO0VBQ0wsV0FBU0QsRUFBRSxDQUFDRSxTQUFTO0VBRXJCQyxVQUFVLEVBQUU7SUFDUkMsVUFBVSxFQUFFLENBQUM7SUFDYkMsWUFBWSxFQUFFLENBQUM7SUFDZkMsWUFBWSxFQUFFLENBQUM7SUFDZkMsS0FBSyxFQUFFLENBQUM7SUFDUkMsU0FBUyxFQUFFO01BQ1AsV0FBUyxJQUFJO01BQ2JDLElBQUksRUFBRVQsRUFBRSxDQUFDVTtJQUNiO0VBQ0osQ0FBQztFQUVEQyxhQUFhLEVBQUUsU0FB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LEVBQUUsQ0FBQ3lDLFdBQVcsQ0FBQ08sR0FBRyxDQUFDaEQsRUFBRSxDQUFDMkMsV0FBVyxDQUFDQyxTQUFTLENBQUNFLE1BQU0sRUFBRSxJQUFJLENBQUNYLE9BQU8sRUFBRSxJQUFJLENBQUM7RUFDM0UsQ0FBQztFQUVEYyxNQUFNLEVBQUUsU0FBQUEsT0FBVUMsRUFBRSxFQUFFO0lBQ2xCLElBQUksSUFBSSxDQUFDbEIsT0FBTyxFQUFFO01BQ2QsSUFBSSxDQUFDUSxNQUFNLElBQUksSUFBSSxDQUFDakMsS0FBSyxHQUFHMkMsRUFBRTtJQUNsQyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNoQixRQUFRLEVBQUU7TUFDdEIsSUFBSSxDQUFDTSxNQUFNLElBQUksSUFBSSxDQUFDakMsS0FBSyxHQUFHMkMsRUFBRTtJQUNsQztJQUNBLElBQUtDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQ1osTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDbEMsWUFBWSxFQUFHO01BQzdDLElBQUksQ0FBQ2tDLE1BQU0sR0FBRyxJQUFJLENBQUNsQyxZQUFZLEdBQUcsSUFBSSxDQUFDa0MsTUFBTSxHQUFHVyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUNaLE1BQU0sQ0FBQztJQUN6RTtJQUVBLElBQUksQ0FBQ0YsSUFBSSxDQUFDZSxDQUFDLElBQUksSUFBSSxDQUFDYixNQUFNLEdBQUdVLEVBQUU7RUFDbkM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG4gICAgXG4gICAgcHJvcGVydGllczoge1xuICAgICAgICBqdW1wSGVpZ2h0OiAwLFxuICAgICAgICBqdW1wRHVyYXRpb246IDAsXG4gICAgICAgIG1heE1vdmVTcGVlZDogMCxcbiAgICAgICAgYWNjZWw6IDAsXG4gICAgICAgIGp1bXBBdWRpbzoge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLkF1ZGlvQ2xpcFxuICAgICAgICB9LFxuICAgIH0sXG5cbiAgICBzZXRKdW1wQWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqdW1wVXAgPSBjYy5tb3ZlQnkodGhpcy5qdW1wRHVyYXRpb24sIGNjLnYyKDAsIHRoaXMuanVtcEhlaWdodCkpLmVhc2luZyhjYy5lYXNlQ3ViaWNBY3Rpb25PdXQoKSk7XG4gICAgICAgIHZhciBqdW1wRG93biA9IGNjLm1vdmVCeSh0aGlzLmp1bXBEdXJhdGlvbiwgY2MudjIoMCwgLXRoaXMuanVtcEhlaWdodCkpLmVhc2luZyhjYy5lYXNlQ3ViaWNBY3Rpb25JbigpKTtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gY2MuY2FsbEZ1bmModGhpcy5wbGF5SnVtcFNvdW5kLCB0aGlzKTtcbiAgICAgICAgcmV0dXJuIGNjLnJlcGVhdEZvcmV2ZXIoY2Muc2VxdWVuY2UoanVtcFVwLCBqdW1wRG93biwgY2FsbGJhY2spKTtcbiAgICB9LFxuXG4gICAgcGxheUp1bXBTb3VuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5RWZmZWN0KHRoaXMuanVtcEF1ZGlvLCBmYWxzZSk7XG4gICAgfSxcblxuICAgIG9uS2V5RG93biAoZXZlbnQpIHtcbiAgICAgICAgc3dpdGNoKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgICAgIGNhc2UgY2MubWFjcm8uS0VZLmE6XG4gICAgICAgICAgICAgICAgdGhpcy5hY2NMZWZ0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgY2MubWFjcm8uS0VZLnM6XG4gICAgICAgICAgICAgICAgdGhpcy5hY2NSaWdodCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgb25LZXlVcCAoZXZlbnQpIHtcbiAgICAgICAgc3dpdGNoKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgICAgIGNhc2UgY2MubWFjcm8uS0VZLmE6XG4gICAgICAgICAgICAgICAgdGhpcy5hY2NMZWZ0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGNjLm1hY3JvLktFWS5zOlxuICAgICAgICAgICAgICAgIHRoaXMuYWNjUmlnaHQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBvbkxvYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmp1bXBBY3Rpb24gPSB0aGlzLnNldEp1bXBBY3Rpb24oKTtcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbih0aGlzLmp1bXBBY3Rpb24pO1xuXG4gICAgICAgIHRoaXMuYWNjTGVmdCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmFjY1JpZ2h0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMueFNwZWVkID0gMDtcblxuICAgICAgICBjYy5zeXN0ZW1FdmVudC5vbihjYy5TeXN0ZW1FdmVudC5FdmVudFR5cGUuS0VZX0RPV04sIHRoaXMub25LZXlEb3duLCB0aGlzKTtcbiAgICAgICAgY2Muc3lzdGVtRXZlbnQub24oY2MuU3lzdGVtRXZlbnQuRXZlbnRUeXBlLktFWV9VUCwgdGhpcy5vbktleVVwLCB0aGlzKTsgICAgXG4gICAgfSxcblxuICAgIG9uRGVzdHJveSAoKSB7XG4gICAgICAgIGNjLnN5c3RlbUV2ZW50Lm9mZihjYy5TeXN0ZW1FdmVudC5FdmVudFR5cGUuS0VZX0RPV04sIHRoaXMub25LZXlEb3duLCB0aGlzKTtcbiAgICAgICAgY2Muc3lzdGVtRXZlbnQub2ZmKGNjLlN5c3RlbUV2ZW50LkV2ZW50VHlwZS5LRVlfVVAsIHRoaXMub25LZXlVcCwgdGhpcyk7XG4gICAgfSwgICAgXG5cbiAgICB1cGRhdGU6IGZ1bmN0aW9uIChkdCkge1xuICAgICAgICBpZiAodGhpcy5hY2NMZWZ0KSB7XG4gICAgICAgICAgICB0aGlzLnhTcGVlZCAtPSB0aGlzLmFjY2VsICogZHQ7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5hY2NSaWdodCkge1xuICAgICAgICAgICAgdGhpcy54U3BlZWQgKz0gdGhpcy5hY2NlbCAqIGR0O1xuICAgICAgICB9XG4gICAgICAgIGlmICggTWF0aC5hYnModGhpcy54U3BlZWQpID4gdGhpcy5tYXhNb3ZlU3BlZWQgKSB7XG4gICAgICAgICAgICB0aGlzLnhTcGVlZCA9IHRoaXMubWF4TW92ZVNwZWVkICogdGhpcy54U3BlZWQgLyBNYXRoLmFicyh0aGlzLnhTcGVlZCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm5vZGUueCArPSB0aGlzLnhTcGVlZCAqIGR0O1xuICAgIH0sXG59KTtcblxuXG4iXX0=